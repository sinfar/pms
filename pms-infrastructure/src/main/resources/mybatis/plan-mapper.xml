<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jxf.pms.mapper.PlanMapper">

    <select id="list" resultType="jxf.pms.dbo.PlanDO">
        <bind name="name" value="'%' + name + '%'" />
        select
            a.id, a.name, a.begin_date, a.end_date, a.plan_status, a.create_time, b.name create_by_name,
            array_length(bugs, 1) bug_cnt, array_length(requirements, 1) requirement_cnt
            from "plan" a
            join  "user" b on b.id = a.create_by
         where 1 = 1
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="createBy != null">
            and a.create_by = #{createBy}
        </if>
        <if test="projectId != null">
            and a.project_id = #{projectId}
        </if>
        <if test="name != null and name != ''">
            and a.name like #{name}
        </if>
        <if test="planStatus != null and planStatus != ''">
            and a.plan_status = '${planStatus}'
        </if>
        order by a.id desc
    </select>

    <select id="all" resultType="jxf.pms.dbo.PlanDO">
        select id, name from plan
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into plan(name, begin_date, end_date,  plan_status, "describe", create_time, create_by, project_id)
        VALUES ( #{name},  #{beginDate}, #{endDate}, '${planStatus}', #{describe}, #{createTime}, #{createBy}, #{projectId})
    </insert>

    <update id="update">
        update "plan" set
        name = #{name}, begin_date = #{beginDate}, end_date = #{endDate}, plan_status = #{planStatus}, describe = #{describe}, project_id = #{projectId}
        where id = #{id}
    </update>

    <select id="getById" resultType="jxf.pms.dbo.PlanDO">
        select
            a.id, a.name, a.begin_date, a.end_date, a.plan_status, a.create_time, b.name create_by_name,
            array_length(bugs, 1) bug_cnt, array_length(requirements, 1) requirement_cnt, c.name project_name
            from "plan" a
            join  "user" b on b.id = a.create_by
            join project c on c.id = a.project_id
        where a.id=#{id}
    </select>
</mapper>
