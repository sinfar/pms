<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jxf.pms.mapper.ProjectMapper">

    <select id="list" resultType="jxf.pms.dbo.ProjectDO">
        <bind name="name" value="'%' + name + '%'" />
        <bind name="code" value="'%' + code + '%'" />

        select
            a.id, a.code, a.name, a.project_status,  a.begin_date, a.end_date, b.name leader_name,
            a.working_days, a.describe, c.estimate_hours, c.cost_hours
            from "project" a
            join  "user" b on b.id = a.leader
            left join (
                select
                project_id,
                sum(estimate_hours) estimate_hours,
                 sum(cost_hours) cost_hours
                 from task where task_status != '已取消'
                group  by project_id
            ) c on c.project_id = a.id
         where 1 = 1
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="code != null and code != ''">
            and a.code like #{code}
        </if>
        <if test="name != null and name != ''">
            and a.name like #{name}
        </if>
        <if test="projectStatus != null and projectStatus != ''">
            and a.project_status = '${projectStatus}'
        </if>
        order by a.id desc
    </select>

    <select id="all" resultType="jxf.pms.dbo.ProjectDO">
        select
            a.id, a.code, a.name, a.project_status,  a.begin_date, a.end_date,
            a.working_days, a.describe
            from "project" a
        order by a.id desc
    </select>

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO "project" (code, name, begin_date, end_date, working_days, leader, "describe", create_time, create_by, project_status)
        VALUES ( #{code},  #{name}, #{beginDate}, #{endDate}, #{workingDays}, #{leader}, #{describe}, #{createTime}, #{createBy},
            '${projectStatus}');
    </insert>

    <update id="update">
        update "project" set
        name = #{name}, code = #{code}, begin_date = #{beginDate}, end_date = #{endDate}, working_days = #{workingDays}, leader = #{leader},
        describe = #{describe}, project_status = '${projectStatus}'
        where id = #{id}
    </update>

    <select id="getById" resultType="jxf.pms.dbo.ProjectDO">
        select
        a.id, a.code, a.name, a.project_status,  a.begin_date, a.end_date, a."describe",  a.leader, b.name leader_name,
        a.working_days, a.describe, c.estimate_hours, c.cost_hours
        from "project" a
        join  "user" b on b.id = a.leader
        left join (
        select
        project_id,
        sum(estimate_hours) estimate_hours,
        sum(cost_hours) cost_hours
        from task where task_status != '已取消'
        group  by project_id
        ) c on c.project_id = a.id
        where a.id=#{id}
    </select>

    <update id="updateProjectStatus">
        update "project" set project_status = '${projectStatus}'
        where id = #{id}
    </update>

    <select id="getProjectStat" resultType="jxf.pms.dbo.ProjectStatDO">
        select
            a.id, a."name",
						coalesce(b.activeReqCnt, 0) activeReqCnt,
						coalesce(b.draftReqCnt, 0) draftReqCnt,
						coalesce(c.unstartTaskCnt, 0) unstartTaskCnt,
						coalesce(c.doingTaskCnt, 0) doingTaskCnt,
						coalesce(d.unexpiredPlanCnt, 0) unexpiredPlanCnt,
						coalesce(e.activeBugCnt, 0) activeBugCnt,
						coalesce(e.uncloseBugCnt, 0) uncloseBugCnt
            from "project" a

            left join
            (select x.project_id,
                sum(case when x.requirement_status = '已激活' then 1 else 0 end) activeReqCnt,
                sum(case when x.requirement_status = '草稿' then 1 else 0 end) draftReqCnt
                from requirement x where x.requirement_status in ('已激活','草稿')
                group by x.project_id) b on b.project_id = a.id

            left join
            (select x.project_id,
                sum(case when x.task_status = '未开始' then 1 else 0 end) unstartTaskCnt,
                sum(case when x.task_status = '进行中' then 1 else 0 end) doingTaskCnt
                from task x where x.task_status in ('未开始','进行中')
                group by x.project_id) c on c.project_id = a.id

            left join
            (select x.project_id,
                sum(case when x.plan_status = '未过期' then 1 else 0 end) unexpiredPlanCnt
                from plan x where x.plan_status in ('未过期')
                group by x.project_id) d on d.project_id = a.id

            left join
            (select x.project_id,
                sum(case when x.bug_status = '激活' then 1 else 0 end) activeBugCnt,
                sum(case when x.bug_status = '已解决' then 1 else 0 end) uncloseBugCnt
                from bug x where x.bug_status in ('激活','已解决')
                group by x.project_id) e on e.project_id = a.id
        where a.project_status != '已关闭'
        order by a.id desc
    </select>
</mapper>
